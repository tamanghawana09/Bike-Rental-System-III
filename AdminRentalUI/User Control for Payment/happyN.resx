<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuGradientPanel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>