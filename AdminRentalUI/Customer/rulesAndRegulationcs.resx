<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuGradientPanel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAA3MAAAA/CAYAAABKO5HwAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAABt0SURBVHhe7d3//3/1fMfx6tPn8/68v3/eny99amZmZmaY
        mZmZGWZmmFkzmZmZNWtmliSVVO8kSSpJ0jdJkiSpJKkkSVKfkkqSJJUkSZIkOXs8nud5nuf5fLzO63Ve
        5/vj9Xrdf7j9EdfL/XHOc7ONG3d81jbb7LictlPcw3J6eNLOpo2yR/Rrl+WNj8zpUbJdwx49oMdwu/fv
        sVntkfa4AT3Bb8/enpjdBtPeyxueNKAny/YJe0pOT+X2ze5p/dov7uk5PSNp/96emdOzD+jbOu45sgPT
        npvT87iD+vf8fh0S98IBvcjv0N5enNO2h/XvJVkdnvbSw5eXBvUy7ojsXj6oI5eXXpHTK/2ODntVTq8+
        dnDbZ3Vc3Gty2iHp+OXFrF7brxOWF1+X0+tlJ4btOKCduJP6t3NWJ6ftMqBd/U7pbfew+aBTl+f3GNCe
        stPC9s5pH+70/u2b1Zlx++W0f9JZ2R0woAPPzmw26SDZOWGHDOjQpHOzO6xf58cdPqAj/C7o7cicjr6w
        f8dmdZFr+ricjucuzu6EQV2yPH1iTif5XRp2ck6nXDa4U7PaFHdaTqdvWp4yXZndmf26annqrJzOll0d
        dk5O517bv/Ozui7tgpwuTLq+t4vSVvZ0w/LKi3O6xO/GsEtzuoy7qX+bsro57sqcrvK7pberB3TtbT2t
        8LtOdnvY9QO6IemO7G7s151xNw3oZr+7erslp9vu7t/tWd2zvHnSHTndyd2b3V2Dum9587tzusfv/t7u
        HdB9Dwzu/qweTHugf5s9mPRQdg/1K4qLqBhwb4i2+Y2kneIeJvrNN4Y9PGln09a/JXrEm9J+22+XaOtH
        in4n6c1xjxL97q5hj07aLdr690SP2S0itKX9vt9boo2PFf0Bt0fa40SPf2vaE/z2jDb+oeiJ3F5pf7RX
        tJVr72irJ4n+mFuOe7LoT/YJe4rf26Kt/lT0VG7ftD/zetrbXRu4P0/aL+7por94R9gz/PaPNvyl1zOT
        3hn3LNGzDwj7q6R3Reu554j++sC05/q9O1r/N6LnJR0U97ei5x8c9oKkQ+JemLbu77j3pL3I79Bo3d+L
        Xsy9N+0fRNselvaPfu+L1r1E9E/c4a61L/V7f7R2O9HLuCPi/ln08g+E/YvfkdHaV4j+lTsq7ZVe/3a0
        aSnpVUnHxP276NXHhv2H3wejpe1F/8kdF/ca0X99KGyHuDU7HB/336LXfjjsf5JOiNa8TvS/SR+Je73o
        /04M2zHpo3FviFvkduJOSnuj38eixZ1Fb+JOTttF9OaPp+3qd0q0uJtod+4TroW3+J0aLewheiv3ybg9
        RXtxp6Xt7fepaGFZtA93etrb/M6I5vf1envSmXH7id7x6bD9/c6K5t8pOoD7TNy7RAeeHfbus6M502fj
        DhIdfE7YIUmfi+beIzo06dy494oOOy/sfUnnxx0eR3iLZt/PfT7tCL8LotkPiI7kvpB2lOjoC8OOSfpi
        NHus6IPcRaYZ7ji/L0UzHxIdz12c9mGvE7gvp33E75Jo5kTRR7mvpJ2URoCLpj/mdXLSV+M+LjrlsrBP
        +F0eTZ8q+iS3Ke400aeuCDv9imi16cq4M0Rnfi3s00lXRavPEn0m6etxZ4s+e3XYOUnXxH3ummjK79xr
        087z+0Y0db7o80nXxV0g+sI3wy5Muj6a+qLoIu5b0aqkL/ndEK26WPRl7ttpl3h9hbsx7VK/70Srviq6
        jLsp7fK0lZd/N1q5yeuKpJvjrhR97XthV/ndEq38uuhq7ta0a7yuvS1oy28kfT/uOtE3bw+7PukHcd/y
        uiHpjrhvi278Ydh3ku40EdrCvvujtJv97opWfE90S9KP424V3XZ32PeTfhKtuF30A+6eaIukO/x+Gm3x
        Q9Gd3L1pP/K6i/tZ2o/97ou2uFv0E+7naffEbW66P9r8p6J7uV/E/Ux03wNhP/f7ZbT5/aJfcA+mPeD1
        y1+5NuMeTHoo2uxXooe4X6f92i+KCHJxdWBua0WY21gKcxzBTWLu8ZyFXOuY4yzkasKcgZwSzBnIjTzm
        OIKbKsxxFnI1YM5BbmQxR6nDHEdwqxFzC8BczZijGsCcgVxpzHEEN2DOYo6zkKsZczHkymCOqhlzAeRG
        DnMcwa0hzK0shTnOQq5GzG1ZCXOcB7kxw5yD3NCY4whuEnMGdBZyJTEXQ64M5jgLuaEwZxEnIfeAgJzE
        XCboLOR6QEeIS0AHzCUR3GrGXAq57jHnIDcU5jgLOTWYoxrC3DpFmFs7NOY4AbnOMcdZyOVhzkCOI7gN
        ibk1ijBnIDeSmOME5GrG3HxhzHEWcjVjLobcqGGOagFzBnJDY44juDWEuemRwxxnIacGc1TDmHOQA+ZK
        Yo6zkGsQcysKYY4C5jzMcVUhx1nI9WCOspjLXOaAOUKcIsxtlYc5A7kkAbkxx9x6DZjzIZeLOWoCMRdA
        rmPMxZAbhDnOQk4N5qgWMGcgpwRz8wMxxwnIdY45zkKuYcw5yCnAnINcD+YodZjjBOQaxNzqqpiTp5YV
        MDc1MpijWsZcDLkMzEnQtYA5Azn1mOMIbi1jbouBmKNawlyKuCEgl3dmCcxxHuJaxxw1gZgLIBdgjhOQ
        6xxzHMFtAjFnINeDOUod5jgBuQnCnIOcasxRE465OfWY4whuE465GHI6MGcgF2COE5DrHHMcwa1lzK1S
        hLkUcjZ1mOME5FrCnIFcl5jzQLeFw5wHurowVwByvascVQVzAegE5BzmOIIbMOc1YpgzkOvBHAXMWcjp
        wJyDnMMcR3AD5qIlRZhbE2DOgk4V5jiCWweYc5BTgLkYcjZ1mLOg6whzs4owN2Mw54FODeYoYM5hbsok
        INc55jzQAXMEuVtTyKnBnAXdKGCuLOR6QCcg5zDHtYA5CTpgjuAGzFXHnA85RZhbH2DOgm4cMbctZyE3
        JOYc5BRgzkDOYE6AbuIxd2K0qAhzCwZzHuiAOUIcZyGnBHOzJg9yE485LsZcALlOMbcphRwwF+dDrm7M
        GdBZyA2NOY7gBsxZzHEh5mLIDYE5CboqmHOQ41pa5Xowx3mQA+aAuXHCnIGcwZwA3cRj7uAQch1jbq3B
        nAc6YI4Qx1nIFcWcD7kaMbcIzAnMcTHmAsh1jDkHOWAuzofcxGOOI7xJ0HWKOS7EXAy5ScUcpQ5zXC/m
        thxHzOVCjrOQy8OcAx3BrW3MOdA1jTnOgxwwxxHcgDndmPMhNxTmOAs5YI7SiDkuxpyD3ERjjtOGOcqH
        3MRjjtOGOS7EXAy5ScUcNQBz04owt7oVzHECcp1jjrOQ64M5AzklmDOQaxRzlBbMSdDlYK69VY6zkCuK
        OQm6wpjjLOQ0Y86BjuAGzHkBc8BcKcxxvZhb1ynmKB9yRTHnIMcJyI0k5jgBOYs5BzkFmIshN6mYowZg
        bl4R5uZawRwnINc55jgLuT6YM5BTgjkDuUYxR40o5lLI1Yk5TkAuD3MXepBrBHMcwW1EMbdl7ZijKkOu
        BObkO3MOc5yAHDAHzAFz1IRizkEuD3MGchzBrSHMGchNLOaoAZhbUoS5Na1gjhOQ6xxzHMFtAOYM5JRg
        zkCuUcxRI4q5FHJ1Yo4TkBsCcw5yjWCOI7iNKOZW1445CpjzMMcJyJXA3MpaMccR3KpizoDOQi4Pc0Ug
        NymYk+/MNYk5CpgD5oA5YK4g5jiC2wDMGchNDOaoEcVcCrlxxxxHcOOqYG5fzkKuRczN1Y45zkIOmEtB
        VxFz07VijiO4jQnmpipjjrOQq4i5VWOBOapOzPmIKwI5hzmO4FYUcxJ0tWKO8jEXgE5ADpgD5oA5Cphr
        CHOcgJzEnA+5scccR3ArgLkeyHWIuTW1Y46zkKuKOR9ylTDHCcgNgTkHOQWYm68VcxzBbUwwN1sZc5yF
        XEXMBZAbJcxJ0DWAOQO50pjjCG41Yc5ArijmJOg6xRxnIVcz5mLIlcScXOcqrnLAHGch1xjmOAE5YA6Y
        A+aAueYwx3mQGxJzDnIKMLdUK+Y4gtuYYG5REeYCyFXCHDVmmDOQK405juBWE+YM5PIw50BHaFOHOc5C
        rmbMxZAbNcxR6jDHEdwawtyqgZjjBOS6xNwmziJuKMhxBLe6MSdB1yTmDOhawpwEHTAHzAFzFnLA3Hhh
        zofcEJgLIAfMBZgzkFOCOQO5ypjjLOTGCHMx5MpgjgLmPMxxAnI1Ym5m5DDHWcg1jDkHOQWYc5DrwRw1
        aZjzEZcHOWBuvDAXgE5ArnPMcRZywBznIQ6YA+aAuQqYoypiLoZcC5jbnrOQawxznIDcmGBuoRTmOAu5
        Mcacg1wu5qiGMecgNxKY4wTkGsTctCLMrc7EHEdwqxtzAej0Yy6GnK0Q5iziikJuaMxZ0FXBnAMdwW3i
        MMcR3IA5mwc5YI4juAFzwBwwN2GYo2rGnIOcAswZxBXCHCcgN6aYmx8KcxzBrWHMBZBTjTmqZcwZyKnF
        nAVdJ5i7XBXmpgzmPNC1jjkuA3M+5ALMZUGOs5CrEXMGdKoxJ0DnYy7zb5YcwQ2YA+aAuQRyHDAHzCUJ
        yAFzuZhbUoS5AHK5mKPGEXMGclyIOQO5gZjjBOQawpyBnHrMcQS3ljE3azDngU4N5gTo6sScAx3BLRNz
        nIWcEsyt7hRzVFuYqwK5LjF3KTBXGHMB6DzEAXPAHDDHkOMs5IA5YK4LzG3HEdqAuf6Yc5DjBORKYG5x
        IOY4CzlgLgVdB5ibA+YE5rgYcw5yCjDnINc65rghMedAR3CrBXOchdwAzE0VxdwgyBnMWcj1YI4aGcxR
        bWFOgm4IzAWgA+YqYo4C5oA5YM4LmBtPzBnQEdrGGHNrgLm+mHOQM5gToGsZcw5yajBHdYY5yofcxGOO
        6wpznIBcH8zFkOsQc1UgpwlzEnTA3ORgzoDOQg6YA+aAOT8BOWAOmAPmQtC1hLlFiTkfci1jLoBc55g7
        TRXmDOQmFnPUAMzNNIo5qgDmpuvEnHw4vCvMOchxAnGDIGcC5iYWcw50BLdGMUcBc8AcMOcFzAFzwNzE
        YM5AzmHOgm5cMOdDrgTm5jvFHNcV5jiC2wDMGcgpwZyBnMScAZ2F3EhjjqqAuRRyGZgrtcpxAnKaMCdB
        N6qYC0AnINca5jhgDpizkAPmOA9xwBwwB8wBc8CcwNzJ0UJnmON0Y85BTgHmHOQawRxHcOsEcxzBrQLm
        pktjjiO4DY05gbiikJOYk6A7g7OQU485zkJOPeY4ghswB8wBc8AcMGcD5oA5YG60MOdDTjHm5lvDHCcg
        JzA31xjmOA9yrWKOqgFzM6UwR9WJOQ90+ZijKkOOE5AD5oA5YA6Y04Q5CTpgzgbMAXPAHDA3pphbUIQ5
        AzlgLhNzAeSAOSrGnEFcUcgVxVwAOgG5UcKcAx3BbZQxZ0BnITfKmLvKIm7EMGdA52NO/gRlVDEnQQfM
        AXPAnIUcMAfMAXPjjzkDOY7g1jTmfMgNhTnOQq4A5nogVwpznIVcHuYc6OrCHGchJzEnTy0LYi6G3CDM
        cQS3LNANwlxByLlFDpgD5oA5YA6YA+aAOc5CDpgD5oA5YK5lzDnIAXM9mJsdiDlOQK41zFnQ1QG5qpiT
        oFOPOY7gJjFnQGchN8qYkw+HA3PAHDAHzAFzAnLAHDAHzAFzk4A5H3ItYc5ArhDmOAG5UcKcAx3BTWLu
        KG5IyAFzY4o5TkBOLeaoOjEnQQfMAXPAHDAHzAnIAXO6MLcdR2gD5oC5ScScgZwuzBnIGcwJ0BXBXFnI
        1Y05+TfLGjDX99SyScxJ0AFzwFwpzFHAHDAHzHkBc8AcMFcdcwZ0hDZgDpibBMz5kFODOS4FXYo5i7ii
        kAPmgLl+mJOgA+bGF3MSdIUxxwFzwBwwB8wBc/oxh2UOmAPm2sFcEci1gjmO4CZBB8wBc8AcMAfMAXPA
        nBcwB8wBc8AcMDdmmCO0ScwZyHEZkFMLOoJb0+ucj7maQJeJubpB5zDHCcyVBh3BLQ9zVUFnMedAZzDn
        gc7H3EDQEdwk6IpgrijoHOa4LMxxBLdM0HmQC0BHcMsCXRHMFQWdwRxHcMvDXAA6gpwFncOcAZ2FXFXM
        5YGuCuYc6AhuWaCrgrk80BnMeaCrgjkDOgu5ujEnQQfM2YA5YA6Yq445AzpCGzAHzAFzKeJKY47A1g9z
        RSEHzAFzwBwwB8wBc8CcDZgD5oC5bMxhmQPmgDk1mKvtmzlgDpgD5oA5YA6YA+Y4YA6YSxKQGxfMGdAR
        2oA5YG5sMGcRNyTmYtAR3BrFnIe4NjBXBXLAHDAHzAFzwBwwB8x5AXPAHDAHzAFzCjAnIKcCcxZyHuYc
        6LrCnIe4oSAHzAFzwBwwB8wBc8CcDZgD5oA5YG5CMBeArmPMzQNzfTE3m4e5KpAD5oA5YA6YA+aAOWDO
        C5gD5oA5YE415ghxnCrMnaUOc3OHWsSpwhyhjasTcyUgB8wx5DgLOWAOmAPmgDlgjgLmgDlgDpgD5lrH
        nAOdAswZ0AFzmZiLQUdo47RgrijkgDlgDpgD5oA5YA6YA+aAuSSCGzA3kphbZMipwxyhTQHm5gPMeYjr
        AHNzmZgjtKnDnEWcKsx5gKsMOU5ADpgD5oA5YA6YE5AD5oA5YA6YmyjMEdo6xJwBXQ/mLOJaxpwBXV/M
        eYhTgzlCmzrMWcQ1iLnZwpjzEFcz5gzoWsOcQFwZyAFzwBwwB8wBcwJywBwwB8zVgzm8M9ca5hzogDnV
        mEtBJyDXAeYc6IC5OA9zM6UwR2hrAHPTeZgrAjlgDpgD5oA5YM5DHDAHzAFzgzFnQEdom0jMEdrUYc4i
        rgXMLQ6NOUJbw5hbKIw5Qps6zFnE1Yw5A7rSmCO01Yg5A7rKmCO0qcOcRZwGzPmIKwo5DpgD5oA5YA6Y
        SyDHAXPAXJKA3LhgbgKWuSVFmDOgA+YyMedApwBzMegE5IA5dZibUYS5FHQCcm1irirkgDlgDpgD5oA5
        CpgD5kYJcwZ0hDZgzssiriHMrSmFOUJbA5gLQFcYc4Q2dZjzEKcGc4S2ipibqx1zhLaSmJttDHMe4tRg
        jtBWAHMx6ATkasecRVwO5gzomlzlgDlgDpgD5oA5hhxnIQfMAXNjhjkDutKY8xBXA+aWasEcoU0d5izi
        VGHOQ1xBzBnQNYI5QltBzM03jjmLuBHEXAC6jjHnQAfMtYu5qpAD5oA5YA6YA+Y8xAFzwBwwN1KYW6MI
        cw50wFwP5uYVYS4GHcGtUcx5iFODOUKbOsx5kBOYm+4McyHkTJ1jzkKullWOs5AD5igBOWAOmAPmPMgB
        c8AcMGfzEFcSc2trxxyhrSTmAtDVijmLOFWY8xA3BOYM6BrHHKEtaQDmFlrFnEWcKswR3NRhzkKOs5hz
        oOsMczHkHOhUYG6TOsytTiCnAHMB6ApjziKuDOSAOWAOmAPmgDmGHAfMtY85D3FDYm4dMNcXcw50CjBn
        QAfMqcdcALqOMTcHzPXF3IwizE0DczmYs4hrC3N9IGcwlwc5YA6YA+aAOWBOQA6YawVzAehqxxyhrQDm
        YtAJyNWOOYs4VZgjtKnDnIVcBuYWO8OcBzmLuRR0AnKtYY4Qpw5z57m0YG72GA9xajBHaFOHOUJbh5hz
        oAsw5yGuRczFoLOI68EcoU0b5nzEDQ05juAGzAFzwFwSwQ2YA+Y6xRyhbQjMBaBrHHOENnWYE5BTgTkC
        nMCcAV2nmIshZ1KDuVMUYo7QpgRzDnTAnGrMxaAjtCnAXAA6YE4t5lY1gjlCWxnIAXPAHDCX5CEOmAPm
        JhhzDnQKMLcWmBsJzAWg6xhzCyoxZxHXMebmAsx5iOsAc7OZmCO0qcOcRZwqzHmIaxhzBnRDYY7Q1jDm
        pgpjziKuDOZ8yNWKOUJbAyeWAeaKQA6YA+aAOQ9ywNzIYW5DZ5izkPMw50DXGeZSyOnB3FHqMLfkQ65j
        zKWg8xCnBnOEtg4xZ0DXgzmLuJYxZ0DXF3Me4tRgjtCmDnMWcQ1ibqYw5ghtDWHOgQ6Y68HcVFuYG2KZ
        i0FHcBtlzBWFHDAHzAFzhDZgTgnmDgDmBmDOgE4J5tYCc30xF4POQ1yHmHOgA+ZUYy4FnYBcB5gLQAfM
        BZgzoCuMOUJbA5hbXQlzFnGqMEdoU4c5QltFzDnQ1YY5D3CVIQfMAXPAHDDXEOYc6BRgbv0LPMSpwRyh
        TQHmAtD5kOsAcwHofMipwxyhTR3mLOJawNzC0JgjtDWMufnCmCO0qcOcRVzNmHOgK4U5QluNmDOgq4w5
        Qps6zHmIU4M5QltJzDnQ1Y45i7gCmFvVOOY8xI0Y5rasE3LAHDAHzHGENiWYc6DzIacGc4S2DjG3PhNz
        hLYOMLduIOYs4lRhjtCmDnOEtoYxt6Yw5jzE1Yw5AzpgLhNzAeg6xlwMOgE5YE4d5qYVYS4FnYAcMBeD
        TgnmDOgaxxyhrW3MFYUcMAfMAXNJAnI1Ys6ATgnmOGBOP+Yc6BRgzoEOmOvB3GIpzBHaGsBcALrCmCO0
        qcOchzg1mCO0VcScAV2tmLOIK4G5mcYw5yFODeYIbQUwF4NOQK52zFnE5WDOgK5JzPmQu9RDnBrMWcip
        wpwHOYu5FHQCck1jzkdcUcgBc8CcZsw50AWYs4hThTlCmzrMEdpawlwAuoGY8xDXEObWFcYcoU0d5izi
        asacAV1pzHmIqwFza2rBHKFNHeYs4pJUYM5DXEHMOdDVjjlCW0HMzTWOOYu4EcRcALqOMedAB8ypxtwq
        RZhbCcz1xZwBXZOrHDA3yZjzEKcGc4S2hjG3lSLMbQDm+mLOgU4B5gzogDn1mFtUhDkHOmCuB3NzijA3
        2wrmPMSpwRyhLUkN5jzICcyt7gxzBDiBuakmMReAzkNcgDkLOVWYu81gzoFOAea2ZMipwxyhrQnMFYQc
        MDdCmDOgU4I5A7qRxZxFXEOYi0FHcCuEOQ9xNWLOga4U5ght6jBnEacKcx7iSmJuqXbMEdpKYi4AXa2Y
        s4hThTlCWwHMGdA1jjlC2xCYM6BrDXMWcaowR3BThzkLOc5izoGuM8zFkHOgU4G5a9RhbiqBXCfLXIi5
        FHQe4oA5dZhboQlzVSAHzNnUY47Q1gDmNlbCnEVcTZgLQFcacx7i1GCO0KYOcxZxJTBnQNcI5ghtBTG3
        FpjrizkHOgWYc6AD5lRjLgBdx5ibBeb6Ym5aEeZWTwLmAtAJyI0I5gzofMh1iDkDuh7MWcSpwpyHuJYw
        l4LOQ1yAOQJbbascZyE3KpgzoFOCua2BuZHA3AZFmDOgA+YyMReArnbMEdoKYC4GHcGtUcxZxKnCHKFN
        HeYs5DIwt9AZ5kLImTrHHCFOHeYucmnB3MxJHuLUYI7Qpg5zFnEdYc6BLsCch7gymCu5zMWg8xAXYI7Q
        pg5zFnGqMOchriHMrSiMOUKbOsxZxBXCnEVcUciVwlwU/T9VYYffLkcvNAAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="bunifuElipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="bunifuElipse2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>141, 17</value>
  </metadata>
</root>